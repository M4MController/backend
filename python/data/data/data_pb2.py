# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: data.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='data.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\ndata.proto\"-\n\tMeterData\x12\x11\n\ttimestamp\x18\x01 \x01(\x04\x12\r\n\x05value\x18\x02 \x01(\x01\"+\n\tTimeQuery\x12\x0b\n\x03set\x18\x01 \x01(\x08\x12\x11\n\ttimestamp\x18\x02 \x01(\x04\"Q\n\nMeterQuery\x12\x18\n\x04\x66rom\x18\x01 \x01(\x0b\x32\n.TimeQuery\x12\x16\n\x02to\x18\x02 \x01(\x0b\x32\n.TimeQuery\x12\x11\n\tsensor_id\x18\x03 \x01(\x04\x32;\n\x0b\x44\x61taService\x12,\n\rGetSensorData\x12\x0b.MeterQuery\x1a\n.MeterData\"\x00\x30\x01\x62\x06proto3')
)




_METERDATA = _descriptor.Descriptor(
  name='MeterData',
  full_name='MeterData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='MeterData.timestamp', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='MeterData.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=59,
)


_TIMEQUERY = _descriptor.Descriptor(
  name='TimeQuery',
  full_name='TimeQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='set', full_name='TimeQuery.set', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='TimeQuery.timestamp', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=104,
)


_METERQUERY = _descriptor.Descriptor(
  name='MeterQuery',
  full_name='MeterQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from', full_name='MeterQuery.from', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to', full_name='MeterQuery.to', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sensor_id', full_name='MeterQuery.sensor_id', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=106,
  serialized_end=187,
)

_METERQUERY.fields_by_name['from'].message_type = _TIMEQUERY
_METERQUERY.fields_by_name['to'].message_type = _TIMEQUERY
DESCRIPTOR.message_types_by_name['MeterData'] = _METERDATA
DESCRIPTOR.message_types_by_name['TimeQuery'] = _TIMEQUERY
DESCRIPTOR.message_types_by_name['MeterQuery'] = _METERQUERY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MeterData = _reflection.GeneratedProtocolMessageType('MeterData', (_message.Message,), dict(
  DESCRIPTOR = _METERDATA,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:MeterData)
  ))
_sym_db.RegisterMessage(MeterData)

TimeQuery = _reflection.GeneratedProtocolMessageType('TimeQuery', (_message.Message,), dict(
  DESCRIPTOR = _TIMEQUERY,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:TimeQuery)
  ))
_sym_db.RegisterMessage(TimeQuery)

MeterQuery = _reflection.GeneratedProtocolMessageType('MeterQuery', (_message.Message,), dict(
  DESCRIPTOR = _METERQUERY,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:MeterQuery)
  ))
_sym_db.RegisterMessage(MeterQuery)



_DATASERVICE = _descriptor.ServiceDescriptor(
  name='DataService',
  full_name='DataService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=189,
  serialized_end=248,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetSensorData',
    full_name='DataService.GetSensorData',
    index=0,
    containing_service=None,
    input_type=_METERQUERY,
    output_type=_METERDATA,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DATASERVICE)

DESCRIPTOR.services_by_name['DataService'] = _DATASERVICE

# @@protoc_insertion_point(module_scope)
