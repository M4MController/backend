# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/timeq.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto/timeq.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x11proto/timeq.proto\"y\n\tTimeQuery\x12\x18\n\x0etimestamp_null\x18\x01 \x01(\x08H\x00\x12\x13\n\ttimestamp\x18\x02 \x01(\x04H\x00\x12\x14\n\nequal_null\x18\x03 \x01(\x08H\x01\x12\x0f\n\x05\x65qual\x18\x04 \x01(\x08H\x01\x42\x0c\n\ntime_queryB\x08\n\x06\x65quealb\x06proto3')
)




_TIMEQUERY = _descriptor.Descriptor(
  name='TimeQuery',
  full_name='TimeQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp_null', full_name='TimeQuery.timestamp_null', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='TimeQuery.timestamp', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='equal_null', full_name='TimeQuery.equal_null', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='equal', full_name='TimeQuery.equal', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='time_query', full_name='TimeQuery.time_query',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='equeal', full_name='TimeQuery.equeal',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=21,
  serialized_end=142,
)

_TIMEQUERY.oneofs_by_name['time_query'].fields.append(
  _TIMEQUERY.fields_by_name['timestamp_null'])
_TIMEQUERY.fields_by_name['timestamp_null'].containing_oneof = _TIMEQUERY.oneofs_by_name['time_query']
_TIMEQUERY.oneofs_by_name['time_query'].fields.append(
  _TIMEQUERY.fields_by_name['timestamp'])
_TIMEQUERY.fields_by_name['timestamp'].containing_oneof = _TIMEQUERY.oneofs_by_name['time_query']
_TIMEQUERY.oneofs_by_name['equeal'].fields.append(
  _TIMEQUERY.fields_by_name['equal_null'])
_TIMEQUERY.fields_by_name['equal_null'].containing_oneof = _TIMEQUERY.oneofs_by_name['equeal']
_TIMEQUERY.oneofs_by_name['equeal'].fields.append(
  _TIMEQUERY.fields_by_name['equal'])
_TIMEQUERY.fields_by_name['equal'].containing_oneof = _TIMEQUERY.oneofs_by_name['equeal']
DESCRIPTOR.message_types_by_name['TimeQuery'] = _TIMEQUERY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TimeQuery = _reflection.GeneratedProtocolMessageType('TimeQuery', (_message.Message,), dict(
  DESCRIPTOR = _TIMEQUERY,
  __module__ = 'proto.timeq_pb2'
  # @@protoc_insertion_point(class_scope:TimeQuery)
  ))
_sym_db.RegisterMessage(TimeQuery)


# @@protoc_insertion_point(module_scope)
